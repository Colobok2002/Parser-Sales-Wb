[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
exclude = [
    "_version.py",
    ".coverage_html",
    ".git",
    ".ipynb_checkpoints",
    "build",
    "dist",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    ".vscode",
    "tests",
    "versioneer_docker.py",
    "versioneer.py",
    "setup.py",
    "old_version",
]

# включить строгую типизацию
strict = true
# включить проверку несовместимых возвращаемых типов
disallow_incomplete_defs = true
# запретить функции без аннотаций типов
disallow_untyped_defs = true
# запретить вызов функций без аннотаций типов
disallow_untyped_calls = false
# запретить смешивание типов при использовании контейнеров
disallow_any_generics = true
# запретить использование переменных без типа при явном any
no_implicit_optional = true
# запретить неявные приведения типов, когда ожидается другой тип
warn_redundant_casts = true
# проверка совместимости типов при присвоении переменных
check_untyped_defs = true
# запретить импорт из библиотек без type hints
disallow_any_unimported = true
# показать коды ошибок
show_error_codes = true
# показывать все предупреждения по типам
warn_return_any = true
# https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules
explicit_package_bases = true

[tool.pydantic-mypy]
init_forbid_extra = false
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = ["iserv.celery_task_scheduler.client.*"]
ignore_missing_imports = true

[tool.ruff]
exclude = [
    ".coverage_html",
    ".git",
    ".ipynb_checkpoints",
    "build",
    "dist",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    ".vscode",
    "**/_version.py",
    "versioneer_docker.py",
    "versioneer.py",
    "setup.py",
    "**/db_migration_client",
]
line-length = 100
indent-width = 4
target-version = "py312"
namespace-packages = ["iserv"]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "F",
    "W",
    "E",
    "I",
    "N",
    "BLE",
    "B",
    "A",
    "D",
    "ICN",
    "UP",
    "ARG",
    "PL",
    "RUF",

    # Специфичные правила
    "PD",
    "PTH",
    "SIM",
    "T20",
    # "EM",
    "C4",
    "C90",
]
ignore = [
    # Рекомендация ruff для фомратера
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "PLR0904", # Слишком большое колво публичных методов в классе
    "W191",    # табуляция в отсупе
    "E111",    # Большой отступ
    "E114",    # Большой отступ (комментаррий)
    "E117",    # Чрезмерный отступ (комментарий)
    "D203",    # Перед строкой документации класса требуется 1 пустая строка.
    "D212",    # Многострочное резюме документации должно начинаться с первой строки.
    "D206",    # Строка документации должна иметь отступы с пробелами, а не с табуляцией.
    "D205",    # Между строкой сводки и описанием требуется 1 пустая строка..
    "D300",    # Использование """
    "D415",    # Точка в конце
    "D400",    # Точка в начале
    "Q",       # Кавычки
    "COM",     # Запятые
    "ISC",     # Строковое объединение
    "RUF001",  # Кириллица
    "RUF002",  # Кириллица
    "RUF003",  # Кириллица
    "PLR0913", # Колличество парраметров которые принимает функция > 7
    "PLR0917", # Колличество парраметров которые принимает функция > 7
]
fixable = ["F", "W", "E", "I", "D", "B", "UP", "PL", "T20", "RUF"]
unfixable = ["ALL"]
preview = true

[tool.ruff.lint.isort]
known-third-party = ["iserv"]
known-first-party = ["iserv.actions.ctrl.mnrs_procedure"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["PLR6301", "PLR2004", "D"]
"**/models/db.py" = ["D101"]

[tool.ruff.lint.pylint]
max-args = 7
max-positional-args = 7

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 100

# https://bandit.readthedocs.io/en/latest/
[tool.bandit]
exclude_dirs = [
    ".coverage_html",
    ".git",
    ".ipynb_checkpoints",
    "build",
    "dist",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    ".vscode",
    "tests",
    "**/_version.py",
    "versioneer_docker.py",
    "versioneer.py",
    "setup.py",
]

# https://coverage.readthedocs.io/en/7.4.1
[tool.coverage.run]
branch = true
source = ["iserv"]
omit = ["docs", "tests", "iserv/actions/ctrl/mnrs_procedure/_version.py"]

[tool.coverage.report]
sort = "cover"
# Regexes for lines to exclude from consideration
exclude_also = [
    "@(abc\\.)?abstractmethod",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
ignore_errors = true
include_namespace_packages = true

[tool.coverage.html]
directory = ".coverage_html"
